source("C:/Users/emais/OneDrive/Bureau/SY02/tp3.R", echo=TRUE)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
sample(10:20, 1)
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
estim(runifa(100))
a <- replicate(1000, estim(runifa(n)))
boxplot(a)
param
runifa <- function(n) {
if(!exists("param")) param <<- sample(10:20, 1) #si la variable param n'existe pas on fait cette assignation de variablequi est global (param n'existera pas qu'a l'intérieur de la fonction), si <- variable locale
runif(n, min = 0, max = param)  #création de l'échantillon
}
estim <- function(x){
2*mean(x)  #2 fois l'espérance de notre échantillon
}
#question 2
n <- 100
estim(runifa(n))
a <- replicate(1000, estim(runifa(n)))  #répliquer l'estimation 1000 fois
a
runifa <- function(n) {
if(!exists("param")) param <<- sample(10:20, 1) #si la variable param n'existe pas on fait cette assignation de variablequi est global (param n'existera pas qu'a l'intérieur de la fonction), si <- variable locale
runif(n, min = 0, max = param)  #création de l'échantillon
}
estim <- function(x){
2*mean(x)  #2 fois l'espérance de notre échantillon
}
#question 2
n <- 100
estim(runifa(n))
a <- replicate(1000, estim(runifa(n)))  #répliquer l'estimation 1000 fois
runifa <- function(n) {
if(!exists("param")) param <<- sample(10:20, 1) #si la variable param n'existe pas on fait cette assignation de variablequi est global (param n'existera pas qu'a l'intérieur de la fonction), si <- variable locale
runif(n, min = 0, max = param)  #création de l'échantillon
}
estim <- function(x){
2*mean(x)  #2 fois l'espérance de notre échantillon
}
#question 2
n <- 100
estim(runifa(n))
a <- replicate(1000, estim(runifa(n)))  #répliquer l'estimation 1000 fois
a
param
parm=20
runifa <- function(n) {
if(!exists("param")) param <<- sample(10:20, 1) #si la variable param n'existe pas on fait cette assignation de variablequi est global (param n'existera pas qu'a l'intérieur de la fonction), si <- variable locale
runif(n, min = 0, max = param)  #création de l'échantillon
}
estim <- function(x){
2*mean(x)  #2 fois l'espérance de notre échantillon
}
#question 2
n <- 100
estim(runifa(n))
a <- replicate(1000, estim(runifa(n)))  #répliquer l'estimation 1000 fois
param
runknown <- function(n) {
bn <- rbinom(n, 1, 0.2)
bn * rnorm(n, mean=-4, sd=1) + (1 - bn) * rnorm(n, mean=10, sd=1)
}
n <- 1000
x <- runknown(n)
mean(x)
#question 2
n <- 100
n <- 1000
x <- runknown(n)
hist(x)
n <- 1000
x <- runknown(n)
hist(x)
rbinom(n, 1, 0.2)
rnorm(n, mean = -4, sd = 1)
bn * rnorm(n, mean = -4, sd = 1) + (1 - bn) * rnorm(n, mean = 10,
sd = 1)
bn <-rbinom(n, 1, 0.2)
bn * rnorm(n, mean = -4, sd = 1) + (1 - bn) * rnorm(n, mean = 10,
sd = 1)
library(shiny)
installed.packages()
install.packages("shiny")
library(shiny)
runExample("01_hello")
setwd("C:/Users/emais/Desktop/UTC - cours/Madrid/Data_visualization/Shiny")
library(shiny)
library(shiny)
runExample("01_hello")
runExample("app")
runExample("01_hello")
runExample("App-1")
